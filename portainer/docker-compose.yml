# Portainer stack
# Deploy with: docker stack deploy --compose-file stack-portainer.yml portainer

version: "3.9"

x-configrule: &configrule
  restart_policy:
    condition: on-failure
    max_attempts: 2
    window: 120s # Watch it
  update_config:
    order: start-first
    parallelism: 1
    delay: 10s
    failure_action: rollback
    monitor: 30s
    max_failure_ratio: 1
  rollback_config:
    order: start-first
    parallelism: 1

networks:
  portainer-net:
    external: false
    name: portainer-net
    driver: overlay
    attachable: false
  public-net:
    external: true

volumes:
  portainer-data:
    name: portainer-data

services:
  agent:
    image: portainer/agent:2.11.1
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
      AGENT_PORT: 9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer-net
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
      resources:
        limits:
          cpus: "0.25"
          memory: "500M"
        reservations:
          cpus: "0.15"
          memory: "50M" 
      <<: *configrule

  app:
    image: portainer/portainer-ee:2.15.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer-data:/data
    networks:
      - public-net
      - reverseproxy-net
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: "2"
          memory: "1000M"
      <<: *configrule
      labels:
        - traefik.enable=true
        - traefik.http.services.portainer.loadbalancer.server.port=9000
